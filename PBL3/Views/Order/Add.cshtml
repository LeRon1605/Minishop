@using Models.DTO
@model Order
@{
    ViewBag.Title = "Đặt hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<CartProduct> item = ViewBag.Items as List<CartProduct>;
}

<div class="container-fluid m-auto mt-5 row">
    <div class="row m-auto rounded" style="width: 73.7em">
        @using (Html.BeginForm("Add", "Order", FormMethod.Post, new { @class = "row m-auto rounded" }))
        {
            <div class="col-7 rounded">
                <div class="bg-white p-3 shadow rounded">
                    <div class="col-12 d-flex justify-content-between">
                        <h6 class="p-0 m-0 fw-bold">Thông tin đơn hàng</h6>
                    </div>
                    @for (int i = 0; i < item.Count; i++)
                    {
                        <hr>
                        <div class="col-12 d-flex">
                            <div class="col-2 border" style="height: 20vh">
                                <img src="@item[i].Product.Image" alt="" style="width: 100%;height: 100%;object-fit:cover">
                            </div>
                            <div class="col-10 d-flex justify-content-between">
                                <div class="ms-3">
                                    <p class="p-0 m-0 fw-bold">@item[i].Product.Name</p>
                                    <p class="p-0 m-0">Số lượng: @item[i].Quantity</p>
                                </div>
                                <div class="">
                                    <p class="p-0 m-0 fw-bold text-danger">@String.Format("{0:0,0}", item[i].Product.Price) đ</p>
                                </div>
                            </div>
                            <input name="ProductOrder[@i].ProductID" value="@item[i].ProductID" class="d-none" />
                            <input name="ProductOrder[@i].Quantity" value="@item[i].Quantity" class="d-none" />
                        </div>
                    }
                </div>
                <div class="bg-white p-3 shadow rounded mt-3">
                    <div class="d-flex justify-content-between col-12">
                        <p class="m-0 p-0">Hình thức thanh toán: </p>
                        <p class="p-0 m-0 text-danger fw-bold">Thanh toán lúc nhận hàng</p>
                    </div>
                    <hr>
                    <div class="d-flex justify-content-between col-12">
                        <p class="m-0 p-0">Đơn vị vận chuyển: </p>
                        <p class="p-0 m-0 text-danger fw-bold">Shopmini</p>
                    </div>
                    <hr>
                    <div class="text-end fw-bold">
                        Cảm ơn đã mua sắm tại shop!
                    </div>
                </div>
            </div>
            <div class="col-4 ms-5 rounded">
                <div class="bg-white p-3 shadow rounded">
                    <div class="col-12">
                        <p class="p-0 m-0 fw-bold"><i class="fa-solid fa-address-card"></i> Địa chỉ nhận hàng</p>
                    </div>
                    <hr>
                    <div class="col-12">
                        <div class="input-group flex-nowrap">
                            <span class="input-group-text"><i class="fa-solid fa-user"></i></span>
                            @Html.EditorFor(model => model.ReceiverName, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "Nhập tên người nhận" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ReceiverName, "", new { @class = "text-danger" })
                        <div class="input-group flex-nowrap mt-2">
                            <span class="input-group-text"><i class="fa-solid fa-phone"></i></span>
                            @Html.EditorFor(model => model.ReceiverPhone, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "Nhập số điện thoại người nhận" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ReceiverPhone, "", new { @class = "text-danger" })
                        <div class="input-group flex-nowrap mt-2">
                            <span class="input-group-text"><i class="fa-solid fa-location-pin"></i></span>
                            @Html.EditorFor(model => model.ReceiverAddress, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "Nhập địa chỉ người nhận" } })

                        </div>
                        @Html.ValidationMessageFor(model => model.ReceiverAddress, "", new { @class = "text-danger" })
                        <div class="input-group flex-nowrap mt-2">
                            <span class="input-group-text"><i class="fa-solid fa-message"></i></span>
                            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "Nhập lưu ý cho người giao hàng" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="bg-white p-3 shadow rounded mt-3">
                    <div class="col-12 d-flex justify-content-between">
                        <p class="p-0 m-0 fw-bold"><i class="fa-solid fa-ticket"></i> Voucher</p>
                        <a href="@Url.Action("Index", "Voucher")" class="text-decoration-none" target="_blank">Xem tất cả voucher</a>
                    </div>
                    <hr>
                    <div class="input-group">
                        <div class="alert col-12 d-none" role="alert" id="notification">
                         
                        </div>
                        <input class = "form-control" placeholder = "Nhập mã voucher" id="voucherSeri"/>
                        @Html.EditorFor(model => model.Voucher.Seri, new { htmlAttributes = new { @class = "form-control d-none", @placeholder = "Nhập mã voucher", @id = "voucher" } })
                        <button class="btn btn-primary" type="button" id="btnCheckVoucher">Sử dụng</button>
                        <span class="text-muted m-0 p-0 mt-2">Hãy ấn sử dụng để kích hoạt mã voucher</span>
                    </div>
                </div>
                <div class="bg-white p-3 shadow rounded mt-3">
                    <div class="col-12">
                        <p class="p-0 m-0 fw-bold"><i class="fa-solid fa-wallet"></i> Hóa đơn</p>
                    </div>
                    <hr>
                    <div class="col-12">
                        <div class="d-flex justify-content-between col-12">
                            <p class="p-0 m-0">Tổng tiền hàng: </p>
                            <p class="p-0 m-0" id="total">@String.Format("{0:0,0}", (int)ViewBag.Total) đ</p>
                        </div>
                        <div class="d-flex justify-content-between col-12">
                            <p class="p-0 m-0">Voucher từ shop: </p>
                            <p class="p-0 m-0" id="voucherValue">0 đ</p>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between col-12">
                            <p class="p-0 m-0">Tổng số tiền: </p>
                            <p class="p-0 m-0 text-danger fw-bold" id="totalValue">@String.Format("{0:0,0}", (int)ViewBag.Total) đ</p>
                        </div>
                    </div>
                </div>
                <button class="btn btn-primary mt-3 col-12" type="submit">Đặt hàng</button>
            </div>
        }
    </div>
</div>
<div class="position-fixed p-3 d-flex justify-content-end" style="z-index: 11; top: 10%">
    <div id="notification_toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="fa-solid fa-bell"></i>
            <strong class="me-auto ms-1">Thông báo</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
                <div class="toast-body text-white bg-danger" id="toast_body">
                    @TempData["Message"]
                </div>
    </div>
</div>
@section scripts
{
    <script src="~/public/js/Order/Add.js"></script>
    @Html.Partial("_ValidationScriptsPartial")
}