@using Models.DTO
@model Order
@{
    ViewBag.Title = "Chi tiết đơn hàng";
}

<div class="row m-auto rounded d-flex justify-content-center" style="width: 77.7em">
    <div class="col-7">
        <div class="bg-white p-3 shadow rounded">
            <div class="col-12 d-flex justify-content-between">
                <h6 class="p-0 m-0 fw-bold">Thông tin đơn hàng</h6>
                <p class="p-0 m-0 fw-bold">ID đơn hàng: @Model.ID</p>
            </div>
            @foreach (ProductOrder productOrder in Model.ProductOrder)
            {
                <hr>
                <div class="col-12 d-flex">
                    <div class="col-2 border" style="height: 15vh">
                        <img src="@(productOrder.Product == null ? "" : productOrder.Product.Image)" alt="" style="width: 100%;height: 100%;object-fit:cover">
                    </div>
                    <div class="col-10 d-flex justify-content-between">
                        <div class="ms-3">
                            <a class="p-0 m-0 fw-bold text-decoration-none text-dark" href="@(productOrder.Product == null ? "" : Url.Action("Index", "Product", new { id = productOrder.ProductID }))">@(productOrder.Product == null ? "Sản phẩm đã bị xóa" : productOrder.Product.Name)</a>
                            <p class="p-0 m-0">Số lượng: @productOrder.Quantity</p>
                        </div>
                        <div class="">
                            <p class="p-0 m-0 fw-bold text-danger">@String.Format("{0:0,0}", productOrder.Price) đ</p>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="bg-white p-3 shadow rounded mt-3">
            <div class="d-flex justify-content-between col-12">
                <p class="m-0 p-0">Hình thức thanh toán: </p>
                <p class="p-0 m-0 text-danger fw-bold">Thanh toán lúc nhận hàng</p>
            </div>
            <hr>
            <div class="d-flex justify-content-between col-12">
                <p class="m-0 p-0">Đơn vị vận chuyển: </p>
                <p class="p-0 m-0 text-danger fw-bold">Shopmini</p>
            </div>
            <hr>
            <div class="d-flex justify-content-between col-12">
                <p class="m-0 p-0">Lưu ý: </p>
                <p class="p-0 m-0 text-danger fw-bold">@(string.IsNullOrEmpty(Model.Note) ? "Không có lưu ý từ khách hàng" : Model.Note)</p>
            </div>
            <hr>
            <div class="text-end fw-bold">
                Cảm ơn đã mua sắm tại shop!
            </div>
        </div>
    </div>
    <div class="col-4 ms-5 rounded">
        <div class="bg-white p-3 shadow rounded">
            <div class="col-12">
                <p class="p-0 m-0 fw-bold"><i class="fa-solid fa-address-card"></i> Địa chỉ nhận hàng</p>
            </div>
            <hr>
            <div class="col-12">
                <p class="p-0 m-0">@Model.ReceiverName</p>
                <p class="p-0 m-0 text-muted">@Model.ReceiverPhone</p>
                <p class="p-0 m-0 text-muted">@Model.ReceiverAddress</p>
            </div>
        </div>
        <div class="bg-white p-3 shadow rounded mt-3">
            <div class="col-12">
                <p class="p-0 m-0 fw-bold"><i class="fa-solid fa-signal"></i> Trạng thái đơn hàng</p>
            </div>
            <hr>
            <div class="col-12">
                @for (int i = Model.StateOrder.Count - 1; i >= 0; i--)
                {
                    if (i != Model.StateOrder.Count - 1)
                    {
                        <p class="p-0 m-0 text-muted"><i class="fa-solid fa-check" style="color:green"></i> @Model.StateOrder[i].Date.ToString("HH:mm dd/MM/yyyy"): @Model.StateOrder[i].State.Name</p>
                    }
                    else
                    {
                        if (Model.isCancel)
                        {

                            <p class="p-0 m-0" style="color: #dc3545"><i class="fa-solid fa-xmark" style="color: red"></i> @Model.StateOrder[i].Date.ToString("HH:mm dd/MM/yyyy"): @Model.StateOrder[i].State.Name</p>
                            
                        }
                        else if (Model.isReceived)
                        {
                            <p class="p-0 m-0 text-muted"><i class="fa-solid fa-check" style="color:green"></i> @Model.StateOrder[i].Date.ToString("HH:mm dd/MM/yyyy"): @Model.StateOrder[i].State.Name</p>
                        }
                        else
                        {
                            <p class="p-0 m-0" style="color:#26aa99">
                                <i class="fa-solid fa-spinner"></i> @Model.StateOrder[i].Date.ToString("HH:mm dd/MM/yyyy"): @Model.StateOrder[i].State.Name
                            </p>
                        }
                    }
                }
            </div>
        </div>
        <div class="bg-white p-3 shadow rounded mt-3">
            <div class="col-12">
                <p class="p-0 m-0 fw-bold"><i class="fa-solid fa-wallet"></i> Hóa đơn</p>
            </div>
            <hr>
            <div class="col-12">
                <div class="d-flex justify-content-between col-12">
                    <p class="p-0 m-0">Tổng tiền hàng: </p>
                    <p class="p-0 m-0">@String.Format("{0:0,0}", Model.Total) đ</p>
                </div>
                <div class="d-flex justify-content-between col-12">
                    <p class="p-0 m-0">Voucher từ shop: </p>
                    <p class="p-0 m-0">-@String.Format("{0:0,0}", Model.Sale) đ</p>
                </div>
                <hr>
                <div class="d-flex justify-content-between col-12">
                    <p class="p-0 m-0">Tổng số tiền: </p>
                    <p class="p-0 m-0 text-danger fw-bold">@String.Format("{0:0,0}", Model.Total - Model.Sale) đ</p>
                </div>
            </div>
        </div>
        @{
            string state = Model.StateOrder.Last().State.Name;
        }
        @if (state == "Đang chờ xác nhận")
        {
            using (Html.BeginForm("Cancel", "Order", FormMethod.Post))
            {
                @Html.HiddenFor(model => model.ID)
                <button class="btn btn-danger mt-3 col-12" type="submit">Hủy đơn hàng</button>
            }
        }
        else if (state == "Đang chờ xác nhận nhận hàng")
        {
            using (Html.BeginForm("ConfirmReceive", "Order", FormMethod.Post))
            {
                @Html.HiddenFor(model => model.ID)
                <button class="btn btn-primary mt-3 col-12" type="submit">Đã nhận hàng</button>
            }
            using (Html.BeginForm("DeclineReceive", "Order", FormMethod.Post))
            {
                @Html.HiddenFor(model => model.ID)
                <button class="btn btn-danger mt-3 col-12" type="submit">Nhận hàng thất bại</button>
            }
        }

    </div>
</div>

<div class="position-fixed p-3 d-flex justify-content-end" style="z-index: 11; top: 10%">
    <div id="notification_toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="fa-solid fa-bell"></i>
            <strong class="me-auto ms-1">Thông báo</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        @if (TempData["Status"] != null)
        {
            if ((bool)TempData["Status"] == false)
            {
                <div class="toast-body text-white bg-danger" id="toast_body">
                    @TempData["Message"]
                </div>
            }
            else
            {
                <div class="toast-body text-white bg-success" id="toast_body">
                    @TempData["Message"]
                </div>
            }
        }
        else
        {
            <div class="toast-body text-white bg-success" id="toast_body">

            </div>
        }
    </div>
</div>
@section scripts{
    <script> 
        window.addEventListener('load', (e) => {
            const toast = document.getElementById('toast_body');
            if (toast.innerText.trim() != '') $("#notification_toast").toast('show');
        });
    </script>
}