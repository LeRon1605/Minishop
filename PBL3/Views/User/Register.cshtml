@model Models.DTO.User

@{
    ViewBag.Title = "Đăng kí";
}
<section class="d-flex align-items-center p-4">
    <div class="container pt-5 p-5 rounded bg-white shadow" style="width: 73.7em">
        <div class="row d-flex align-items-center">
            <div class="col-7 d-none d-sm-block">
                <img src="~/public/images/Logo.jpg" class="img-fluid" alt="...">
            </div>
            <div class="col-sm-5 p-4 border-start border-secondary">
                <h3>Đăng kí Shopini</h3>
                @if (TempData["Message"] != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @TempData["Message"]
                    </div>
                }
                @using (Html.BeginForm("Register", "User", FormMethod.Post))
                {
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập tên của bạn" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3 row d-flex align-items-center">
                        <div class="col-7">
                            @Html.LabelFor(model => model.Birth, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Birth, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @type = "date", @id="birth" } })
                            @Html.ValidationMessageFor(model => model.Birth, "", new { @class = "text-danger" })
                            <span id="validation-message" class="text-danger d-none">Ngày sinh không được lớn hơn ngày hiện tại</span>
                        </div>
                        <div class="col-5">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-label" })
                            <div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="Gender" value="Nam" checked="checked">
                                    <label class="form-check-label">Nam</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="Gender" value="Nữ">
                                    <label class="form-check-label">Nữ</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập số điện thoại của bạn" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập địa chỉ của bạn" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập email của bạn" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Nhập mật khẩu của bạn" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <button type="submit" class="btn btn-primary col-12" id="submitBtn">Đăng kí</button>
                    <p class="mt-3 mb-0">
                        Bạn đã có tài khoản?
                        @Html.ActionLink("Đăng nhập", "Login", "User", new { @class = "text-decoration-none" })
                    </p>
                    <p class="mt-2">
                        @Html.ActionLink("Quên mật khẩu?", "ForgetPassword", "User", new { @class = "text-decoration-none" })
                    </p>
                }
            </div>
        </div>
    </div>
</section>
@section scripts{
    @Html.Partial("_ValidationScriptsPartial")
    <script>
        $('#submitBtn').click(e => {
            let Birth = document.getElementById('birth');
            let validationMessage = document.getElementById('validation-message');
            if (new Date(Birth.value).getTime() > new Date().getTime()) {
                if (validationMessage.classList.contains('d-none')) validationMessage.classList.remove('d-none');
                e.preventDefault();
            } else {
                if (!validationMessage.classList.contains('d-none')) validationMessage.classList.add('d-none');
            }
            console.log()
        });
    </script>
}
