
@{
    ViewBag.Title = Model.Name;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using Models.DTO
@model User
@section Styles
{
    <style>
        input[type="file"] {
            display: none;
        }

        .custom-file-upload {
            border: 1px solid;
            color: black;
            display: inline-block;
            padding: 6px 12px;
            cursor: pointer;
            position: absolute;
            bottom: 7%;
            right: 0;
        }

        input:focus {
            outline: none !important;
            border-color: #719ECE;
        }
    </style>
}
@using (Html.BeginForm("Update", "User", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "d-flex align-items-center", @style = "height:100vh" }))
{
    <div class="row justify-content-center col-12">

        <div class="col-md-3 rounded d-flex flex-column">
            <p class="card-header">Ảnh người dùng</p>
            <div class="d-flex flex-column align-items-center justify-content-between border rounded bg-white p-2">
                <div class="d-flex flex-column align-items-center" style="position: relative">
                    <img src="@Model.Image"
                         class="img-fluid rounded-circle" style="width: 200px; height: 200px;object-fit: cover" id="image">
                    <label class="custom-file-upload mt-3 rounded-circle bg-light">
                        @Html.HiddenFor(model => model.Image)
                        <input type="file" id="inputImage" name="file" value="/upload/user/Default.png">
                        <i class="fa-solid fa-camera"></i>
                    </label>
                </div>
                <h4 class="mt-2">@Model.Name</h4>
                <div class="d-flex d-flex justify-content-around border-top align-items-center p-2" style="width: 100%">
                    <div class="text-center">
                        <p class="m-0">Tổng đơn hàng</p>
                        <p class="m-0">0</p>
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-end d-md-block d-none mt-auto">
                <button class="btn btn-danger col-12" data-bs-toggle="modal" data-bs-target="#changePassword" type="button">Đổi mật khẩu</button>
                <button class="btn btn-primary col-12 mt-2" type="submit" id="saveBtn">Lưu thông tin</button>
            </div>
        </div>
        <div class="col-md-6 mt-md-0 mt-3">
            <p class="card-header">Thông tin chi tiết</p>
            <div class="border bg-white rounded">
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">ID người dùng</h6>
                    @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @readonly = true, @class = "col-8 m-0 p-0", @type = "text", @style = "border: none", @id = "UserID" } })
                </div>
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">Họ và tên</h6>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "col-8 m-0 p-0", @placeholder = "Nhập tên của bạn", @type = "text", @style = "border: none" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger p-0" })
                </div>
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">Gmail</h6>
                    @Html.EditorFor(model => model.Email, new { @readonly = true, htmlAttributes = new { @class = "col-8 m-0 p-0", @placeholder = "Nhập gmail của bạn", @style = "border: none" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger p-0" })
                </div>
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">Số điện thoại</h6>
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "col-8 m-0 p-0", @placeholder = "Nhập số điện thoại của bạn", @type = "text", @style = "border: none" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger p-0" })
                </div>
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">Địa chỉ</h6>
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "col-8 m-0 p-0", @placeholder = "Nhập số địa chỉ của bạn", @type = "text", @style = "border: none" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger p-0" })
                </div>
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">Giới tính</h6>
                    <div class="col-8 d-flex m-0 p-0">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="Gender" checked value="Nam">
                            <label class="form-check-label" for="flexRadioDefault1 m-0">
                                Nam
                            </label>
                        </div>
                        <div class="form-check ms-3">
                            @if (Model.Gender == "Nữ")
                            {
                                <input class="form-check-input" type="radio" name="Gender" checked value="Nữ">
                            }
                            else
                            {
                                <input class="form-check-input" type="radio" name="Gender" value="Nữ">
                            }
                            <label class="form-check-label" for="flexRadioDefault2">
                                Nữ
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">Ngày sinh</h6>
                    <input value="@Model.Birth.ToString("yyyy-MM-dd")" style="border: none" class="col-8 m-0 p-0" type="date" name="Birth" id="birth" />
                    <span id="validation-message" class="text-danger d-none p-0">Ngày sinh không được lớn hơn ngày hiện tại</span>
                </div>
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">Trạng thái</h6>
                    <input value="@(Model.isActivated ? "Đã kích hoạt" : "Chưa kích hoạt")" style="border: none" class="col-8 m-0 p-0" readonly>
                </div>
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">Ngày tham gia</h6>
                    <input value="@Model.CreatedAt.ToString("hh:mm:ss dd/MM/yyyy")" style="border: none" class="col-8 m-0 p-0" readonly type="text">
                </div>
                <div class="row d-flex m-3 border-bottom">
                    <h6 class="m-0 col-4 p-0" style="line-height: normal;">Cập nhật lần cuối</h6>
                    @if (Model.UpdatedAt != null)
                    {
                        <input value="@Convert.ToDateTime(Model.UpdatedAt).ToString("hh:mm:ss dd/MM/yyyy")" style="border: none" class="col-8 m-0 p-0" readonly type="text">
                    }
                    else
                    {
                        <input value="dd/mm/yyyy" style="border: none" class="col-8 m-0 p-0" readonly type="text">
                    }
                </div>
            </div>
        </div>
    </div>
}

<div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
    <div id="notification_toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="fa-solid fa-bell"></i>
            <strong class="me-auto ms-1">Thông báo</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        @if (TempData["Status"] != null)
        {
            if ((bool)TempData["Status"] == false)
            {
                <div class="toast-body text-white bg-danger" id="toast_body">
                    @TempData["Message"]
                </div>
            }
            else
            {
                <div class="toast-body text-white bg-success" id="toast_body">
                    @TempData["Message"]
                </div>
            }
        }
        else
        {
            <div class="toast-body text-white bg-success" id="toast_body">

            </div>
        }
    </div>
</div>


<div class="modal fade" id="changePassword">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Đổi mật khẩu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="notification">

                </div>
                <form>
                    <div class="mb-3">
                        <label class="form-label">Mật khẩu mới</label>
                        <input type="password" class="form-control" name="newPassword" placeholder="Nhập mật khẩu mới">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Xác nhận mật khẩu mới</label>
                        <input type="password" class="form-control" name="confirmPassword" placeholder="Xác nhận mật khẩu">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Thoát</button>
                <button type="button" class="btn btn-primary" id="btnSubmit">Lưu</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    @Html.Partial("_ValidationScriptsPartial")
    <script>
        let inputImage = document.getElementById('inputImage');
        let image = document.getElementById('image');
        let Birth = document.getElementById('birth');
        let validationMessage = document.getElementById('validation-message');
        inputImage.onchange = (e) => {
            image.src = URL.createObjectURL(e.target.files[0]);
        };
        window.addEventListener('load', (e) => {
            const toast = document.getElementById('toast_body');
            if (toast.innerText.trim() != '') $("#notification_toast").toast('show');
        })
        $("#saveBtn").click(e => {
            console.log(new Date(Birth.value).getTime() > new Date().getTime());
            if (new Date(Birth.value).getTime() > new Date().getTime()) {
                if (validationMessage.classList.contains('d-none')) validationMessage.classList.remove('d-none');
                e.preventDefault();
            } else {
                if (!validationMessage.classList.contains('d-none')) validationMessage.classList.add('d-none');
            }
        });
        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            const data = {
                UserID: $("#UserID").val(),
                NewPassword: $("input[name='newPassword']").val(),
                ConfirmPassword: $("input[name='confirmPassword']").val()
            };
            if (data.NewPassword !== data.ConfirmPassword) {
                const notification = document.querySelector("#notification");
                notification.innerHTML = `<div class="alert alert-danger col-12 p-2" role="alert">`
                    + 'Mật khẩu xác nhận sai' +
                    `</div>`
                    ;
                return false;
            }
            axios.post('/admin/user/ChangePassword', data)
                .then(res => {
                    const notification = document.querySelector("#notification");
                    if (res.data.status) {
                        notification.innerHTML = `<div class="alert alert-success col-12 p-2" role="alert">`
                            + res.data.message +
                            `</div>`;
                        $("input[name='newPassword']").val("");
                        $("input[name='confirmPassword']").val("");
                    } else {
                        notification.innerHTML = `<div class="alert alert-danger col-12 p-2" role="alert">`
                            + res.data.detail +
                            `</div>`;
                    }
                })
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.26.1/axios.min.js" integrity="sha512-bPh3uwgU5qEMipS/VOmRqynnMXGGSRv+72H/N260MQeXZIK4PG48401Bsby9Nq5P5fz7hy5UGNmC/W1Z51h2GQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
}

