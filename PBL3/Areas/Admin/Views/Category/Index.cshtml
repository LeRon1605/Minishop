@using Models.DTO
@using PBL3.Models
@model Category
@{
    ViewBag.Title = "Quản li loại sản phẩm";
    List<Category> categories = ViewBag.categories;
    PagingModel pagingData = ViewBag.pagingData as PagingModel;
}
@section Styles
{
    <link rel="stylesheet" href="~/public/css/table.css" />
    <link rel="stylesheet" href="~/public/css/Add_Category.css" />
}
<div class="d-flex mt-3 p-2">
    <div class="btn m-0 btn-outline-none action_product action_product_click">
        <i class="fa-solid fa-list"></i>
        Danh sách loại sản phẩm
    </div>
    <div class="btn m-0 action_product">
        <i class="fa-solid fa-plus"></i>
        Thêm loại sản phẩm
    </div>
</div>
<div class="table-responsive mt-3 shadow" id="list_product">
    <div class="table-wrapper">
        @using (Html.BeginForm("Index", "Category", FormMethod.Get))
        {
            <div class="row">
                <div class="col-sm-8 row">

                </div>
                <div class="col-sm-4 p-0">
                    <label class="form-label">Tìm kiếm</label>
                    <div class="input-group">
                        <input type="text" class="form-control" id="keyword_search" name="keyword" placeholder="Nhập từ khóa tìm kiếm">
                        <button class="btn btn-primary" type="submit" id="btn_search"><i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                </div>
            </div>
        }

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>STT</th>
                    <th class="w-25">Tên loại sản phẩm</th>
                    <th>Mô tả</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="table_body">
                @for (int i = 0; i < categories.Count; i++)
                {
                    <tr>
                        <td class="STT">@(i + 1)</td>
                        <td>@categories[i].Name</td>
                        <td>@categories[i].Description</td>
                        <td>
                            <div class="d-flex">
                                <a href="@Url.Action("View", "Category", new {id = categories[i].ID})" class="btn bg-success rounded m-0 ms-2" title="Xem chi tiết loại sản phẩm" data-toggle="tooltip">
                                    <i class="fa-solid fa-eye" style="color: white"></i>
                                </a>
                                <a href="@Url.Action("View", "Category", new {id = categories[i].ID, isEdit = true})" class="btn bg-primary rounded ms-2" title="Chỉnh sửa loại sản phẩm">
                                    <i class="fa-solid fa-pen" style="color: white"></i>
                                </a>
                                <button type="submit" class="btn bg-danger rounded ms-2" title="Xóa loại sản phẩm" data-index="@i" data-id="@categories[i].ID" onclick="deleteCategory(this)">
                                    <i class="fa-solid fa-trash-can" style="color: white"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="clearfix">
            @Html.Partial("_Pagination", pagingData)
        </div>
    </div>
</div>
@using (Html.BeginForm("Add", "Category", FormMethod.Post, new { @class = "p-5 mt-3 bg-white shadow rounded d-none", @id = "add_form" }))
{
    <div class="row d-flex justify-content-center">
        <div class="col-md-8">
            <div class="row justify-content-center">
                <div class="col-md-8">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập tên loại sản phẩm", @id = "name_category" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                    </div>
                    <div class="">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label mt-3" })
                        @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", @placeholder = "Nhập mô tả loại sản phẩm", @style = "height: 31.7vh", @id = "description_category" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-12">
                        <button class="btn btn-primary col-12 mt-3" id="submitBtn" type="submit">Thêm loại sản phẩm</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
    <div id="notification_toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="fa-solid fa-bell"></i>
            <strong class="me-auto ms-1">Thông báo</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        @if (TempData["AddStatus"] != null)
        {
            if ((bool)TempData["AddStatus"] == false)
            {
                <div class="toast-body text-white bg-danger" id="toast_body">
                    @TempData["AddDetail"]
                </div>
            }
            else
            {
                <div class="toast-body text-white bg-success" id="toast_body">
                    Thêm loại sản phẩm thành công
                </div>
            }
        }
        else
        {
            <div class="toast-body text-white bg-success" id="toast_body">

            </div>
        }
    </div>
</div>
@section scripts {
    <script>
        window.addEventListener('load', (e) => {
            const toast = document.getElementById('toast_body');
            if (toast.innerText.trim() != '') $("#notification_toast").toast('show');
        })
    </script>
    <script src="~/public/js/Category.js"></script>
    <script src="/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="/Scripts/jquery.validate.js"></script>
    <script src="/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.26.1/axios.min.js" integrity="sha512-bPh3uwgU5qEMipS/VOmRqynnMXGGSRv+72H/N260MQeXZIK4PG48401Bsby9Nq5P5fz7hy5UGNmC/W1Z51h2GQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
}