@using Models.DTO
@model User
@{
    ViewBag.Title = "Thông tin tài khoản";
}

@section Styles
{
    <style>
        input[type="file"] {
            display: none;
        }

        .custom-file-upload {
            border: 1px solid;
            color: black;
            display: inline-block;
            padding: 6px 12px;
            cursor: pointer;
            position: absolute;
            bottom: 7%;
            right: 0;
        }

        input:focus {
            outline: none !important;
            border-color: #719ECE;
        }
    </style>
    <link rel="stylesheet" href="~/public/css/Admin_Profile.css" />
}
<div class="container-xl px-4 d-flex align-items-center" style="height: 100vh">
    <form action="/Admin/profile/update" method="post" enctype="multipart/form-data" class="col-12">
        <div class="row">
            <div class="col-xl-4">
                <!-- Profile picture card-->
                <div class="card mb-4 mb-xl-0">
                    <div class="card-header">Ảnh của người dùng</div>
                    <div class="card-body text-center">
                        <div class="d-flex flex-column align-items-center" style="position: relative">
                            <img src="@Model.Image"
                                 class="img-fluid rounded-circle" style="width: 200px; height: 200px;object-fit: cover" id="image">
                            <label class="custom-file-upload mt-3 rounded-circle bg-light">
                                @Html.HiddenFor(model => model.Image)
                                <input type="file" id="inputImage" name="file">
                                <i class="fa-solid fa-camera"></i>
                            </label>
                        </div>
                        <h4 class="mt-2">@Model.Name</h4>
                    </div>
                </div>
            </div>
            <div class="col-xl-8">
                <!-- Account details card-->
                <div class="card mb-4">
                    <div class="card-header">Thông tin chi tiết</div>
                    <div class="card-body">
                        @Html.HiddenFor(model => model.ID)
                        <div class="row d-flex m-3 border-bottom">
                            <h6 class="m-0 col-4 p-0" style="line-height: normal;">Họ và tên</h6>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "col -8 m-0 p-0", @placeholder = "Nhập tên của bạn", @type = "text", @style = "border: none" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger p-0" })
                        </div>
                        <div class="row d-flex m-3 border-bottom">
                            <h6 class="m-0 col-4 p-0" style="line-height: normal;">Gmail</h6>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @readonly = "true", @class = "col-8 m-0 p-0", @placeholder = "Nhập gmail của bạn", @style = "border: none" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger p-0" })
                        </div>
                        <div class="row d-flex m-3 border-bottom">
                            <h6 class="m-0 col-4 p-0" style="line-height: normal;">Số điện thoại</h6>
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "col-8 m-0 p-0", @placeholder = "Nhập số điện thoại của bạn", @type = "text", @style = "border: none" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger p-0" })
                        </div>
                        <div class="row d-flex m-3 border-bottom">
                            <h6 class="m-0 col-4 p-0" style="line-height: normal;">Địa chỉ</h6>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "col-8 m-0 p-0", @placeholder = "Nhập số địa chỉ của bạn", @type = "text", @style = "border: none" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger p-0" })
                        </div>
                        <div class="row d-flex m-3 border-bottom">
                            <h6 class="m-0 col-4 p-0" style="line-height: normal;">Giới tính</h6>
                            <div class="col-8 d-flex m-0 p-0">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="Gender" checked value="Nam">
                                    <label class="form-check-label" for="flexRadioDefault1 m-0">
                                        Nam
                                    </label>
                                </div>
                                <div class="form-check ms-3">
                                    @if (Model.Gender == "Nữ")
                                    {
                                        <input class="form-check-input" type="radio" name="Gender" checked value="Nữ">
                                    }
                                    else
                                    {
                                        <input class="form-check-input" type="radio" name="Gender" value="Nữ">
                                    }
                                    <label class="form-check-label" for="flexRadioDefault2">
                                        Nữ
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row d-flex m-3 border-bottom">
                            <h6 class="m-0 col-4 p-0" style="line-height: normal;">Ngày sinh</h6>
                            <input value="@Model.Birth.ToString("yyyy-MM-dd")" style="border: none" class="col-8 m-0 p-0" type="date" name="Birth" id="birth" />
                            <span id="validation-message" class="text-danger d-none p-0">Ngày sinh không được lớn hơn ngày hiện tại</span>
                        </div>
                        <div class="row d-flex m-3 border-bottom">
                            <h6 class="m-0 col-4 p-0" style="line-height: normal;">Trạng thái</h6>
                            <input value="@(Model.isActivated ? "Đã kích hoạt" : "Chưa kích hoạt")" style="border: none" class="col-8 m-0 p-0" readonly>
                        </div>
                        <div class="row d-flex m-3 border-bottom">
                            <h6 class="m-0 col-4 p-0" style="line-height: normal;">Ngày tham gia</h6>
                            <input value="@Model.CreatedAt.ToString("hh:mm:ss dd/MM/yyyy")" style="border: none" class="col-8 m-0 p-0" readonly type="text">
                        </div>
                        <div class="row d-flex m-3 border-bottom">
                            <h6 class="m-0 col-4 p-0" style="line-height: normal;">Cập nhật lần cuối</h6>
                            @if (Model.UpdatedAt != null)
                            {
                                <input value="@Convert.ToDateTime(Model.UpdatedAt).ToString("hh:mm:ss dd/MM/yyyy")" style="border: none" class="col-8 m-0 p-0" readonly type="text">
                            }
                            else
                            {
                                <input value="dd/mm/yyyy" style="border: none" class="col-8 m-0 p-0" readonly type="text">
                            }
                        </div>
                        <!-- Save changes button-->
                    
                        <button class="btn btn-primary" type="submit" id="saveBtn">Lưu thông tin</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
    <div id="notification_toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="fa-solid fa-bell"></i>
            <strong class="me-auto ms-1">Thông báo</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        @if (TempData["Status"] != null)
        {
            if ((bool)TempData["Status"] == false)
            {
                <div class="toast-body text-white bg-danger" id="toast_body">
                    @TempData["Message"]
                </div>
            }
            else
            {
                <div class="toast-body text-white bg-success" id="toast_body">
                    @TempData["Message"]
                </div>
            }
        }
        else
        {
            <div class="toast-body text-white bg-success" id="toast_body">

            </div>
        }
    </div>
</div>
@section scripts
{
    @Html.Partial("_ValidationScriptsPartial")
    <script>
        // Image

        let inputImage = document.getElementById('inputImage');
        let image = document.getElementById('image');
        inputImage.onchange = (e) => {
            image.src = URL.createObjectURL(e.target.files[0]);
        }
        window.addEventListener('load', (e) => {
            const toast = document.getElementById('toast_body');
            if (toast.innerText.trim() != '') $("#notification_toast").toast('show');
        })

        let Birth = document.getElementById('birth');
        let validationMessage = document.getElementById('validation-message');
        $("#saveBtn").click(e => {
            console.log(new Date(Birth.value).getTime() > new Date().getTime());
            if (new Date(Birth.value).getTime() > new Date().getTime()) {
                if (validationMessage.classList.contains('d-none')) validationMessage.classList.remove('d-none');
                e.preventDefault();
            } else {
                if (!validationMessage.classList.contains('d-none')) validationMessage.classList.add('d-none');
            }
        });
    </script>


}
