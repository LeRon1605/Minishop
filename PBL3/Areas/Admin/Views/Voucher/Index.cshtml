@using Models.DTO
@using PBL3.Models
@model Voucher
@{
    ViewBag.Title = "Quản lí voucher";
    List<Voucher> Vouchers = (List<Voucher>)ViewBag.Vouchers;
    List<State> states = ViewBag.states as List<State>;
    PagingModel pagingData = ViewBag.pagingData as PagingModel;
}
@section Styles
{
    <link rel="stylesheet" href="~/public/css/table.css" />
    <style>
        .action_voucher {
            border: none
        }

        .action_voucher:hover {
            color: #0D6EFD
        }

        .action_voucher_click {
            color: #0D6EFD;
            border-radius: 0;
            border-bottom: 2px solid #0D6EFD;
        }
    </style>
}
<div class="d-flex mt-3 p-2">
    <div class="btn m-0 btn-outline-none action_voucher action_voucher_click">
        <i class="fa-solid fa-list"></i>
        Danh sách Voucher
    </div>
    <div class="btn m-0 action_voucher">
        <i class="fa-solid fa-plus"></i>
        Thêm Voucher
    </div>
</div>
<div class="table-responsive mt-3 shadow" id="list_voucher">
    <div class="table-wrapper">
        @using (Html.BeginForm("Index", "Voucher", FormMethod.Get))
        {
            <div class="row">
                <div class="col-sm-8 row">
                    <div class="col-sm-4">
                        <label class="form-label">Giá trị Voucher</label>
                        <select class="form-select" name="Value" id="value_search">
                            <option value="All">All</option>
                            <option value="100000">Dưới 100.000</option>
                            <option value="300000">Dưới 300.000</option>
                            <option value="500000">Dưới 500.000</option>
                        </select>
                    </div>
                    <div class="col-sm-4">
                        <label class="form-label">Trạng thái Voucher</label>
                        <select class="form-select" name="State" id="state_search">
                            <option value="All">All</option>
                            <option value="inactivated">Voucher chưa kích hoạt</option>
                            <option value="valid">Voucher còn hạn sử dụng</option>
                            <option value="invalid">Voucher hết hạn</option>
                        </select>
                    </div>
                </div>
                <div class="col-sm-4 p-0">
                    <label class="form-label">Tìm kiếm</label>
                    <div class="input-group">
                        <input type="text" class="form-control" id="keyword_search" name="keyword" placeholder="Nhập từ khóa tìm kiếm">
                        <button class="btn btn-primary" type="submit" id="btn_search"><i class="fa-solid fa-magnifying-glass"></i></button>
                    </div>
                </div>
            </div>
        }

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>STT</th>
                    <th>Seri</th>
                    <th>Giá trị Voucher</th>
                    <th>Số lượng</th>
                    <th>Ngày bắt đầu</th>
                    <th>Ngày Kết thúc</th>
                    <th>Trạng thái</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="table_body">
                @for (int i = 0; i < Vouchers.Count; i++)
                {
                <tr>
                    <td class="STT">@(i + 1)</td>
                    <td>@Vouchers[i].Seri</td>
                    <td>@String.Format("{0:0,0}", Vouchers[i].Value) đ</td>
                    <td>@Vouchers[i].Quantity</td>
                    <td>@Vouchers[i].StartDate.ToString("dd/MM/yyyy")</td>
                    <td>@Vouchers[i].EndDate.ToString("dd/MM/yyyy")</td>
                    @if (Vouchers[i].EndDate.Date >= DateTime.Now.Date && Vouchers[i].StartDate.Date <= DateTime.Now.Date)
                    {
                        <td>Còn hạn sử dụng</td>
                    }
                    else if (Vouchers[i].EndDate.Date < DateTime.Now.Date)
                    {
                        <td>Hết hạn sử dụng</td>
                    }
                    else
                    {
                        <td>Chưa kích hoạt</td>
                    }
                    <td>
                        <div class="d-flex">
                            <a href="@Url.Action("View", "Voucher", new {id = Vouchers[i].ID})" class="btn bg-success rounded m-0 ms-2" title="Xem chi tiết Voucher" data-toggle="tooltip">
                                <i class="fa-solid fa-eye" style="color: white"></i>
                            </a>
                            <a href="@Url.Action("View", "Voucher", new {id = Vouchers[i].ID, isEdit = true})" class="btn bg-primary rounded ms-2" title="Chỉnh sửa Voucher">
                                <i class="fa-solid fa-pen" style="color: white"></i>
                            </a>
                            <button type="submit" class="btn bg-danger rounded ms-2" title="Xóa Voucher" data-index="@i" data-id="@Vouchers[i].ID" onclick="deleteVoucher(this)">
                                <i class="fa-solid fa-trash-can" style="color: white"></i>
                            </button>
                        </div>
                    </td>
                </tr>
                }
            </tbody>
        </table>
        <div class="clearfix">
            @Html.Partial("_Pagination", pagingData)
        </div>
    </div>
</div>
@using (Html.BeginForm("Add", "Voucher", FormMethod.Post, new { @class = "p-5 mt-3 bg-white shadow rounded d-none", @id = "add_form" }))
{
    <div class="row d-flex justify-content-center">
        <div class="col-md-8">
            <div class="row justify-content-center">
                <div class="col-md-8">
                    <div class="">
                        @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập giá trị của Voucher", @id = "value_voucher" } })
                        @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })

                    </div>
                    <div class="">
                        @Html.LabelFor(model => model.Seri, htmlAttributes: new { @class = "form-label mt-3" })
                        @Html.EditorFor(model => model.Seri, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập Mã của Voucher", @id = "seri_voucher" } })
                        @Html.ValidationMessageFor(model => model.Seri, "", new { @class = "text-danger" })
                    </div>
                    <div class="">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "form-label mt-3" })
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập Số lượng Voucher", @id = "quantity_voucher" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "startDate_voucher" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        <span id="validation-startDate-message" class="text-danger d-none">Ngày bắt đầu không được bé hơn ngày hiện tại</span>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "endDate_voucher" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger", @id = "endDate_validation" })
                        <span id="validation-endDate-message" class="text-danger d-none">Ngày kết thúc không được bé hơn ngày bắt đầu</span>
                    </div>
                    <div class="col-12">
                        <button class="btn btn-primary col-12 mt-3" id="submitBtn" type="submit">Thêm Voucher</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
    <div id="notification_toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="fa-solid fa-bell"></i>
            <strong class="me-auto ms-1">Thông báo</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        @if (TempData["Status"] != null)
        {
            if ((bool)TempData["Status"] == false)
            {
                <div class="toast-body text-white bg-danger" id="toast_body">
                    @TempData["Message"]
                </div>
            }
            else
            {
                <div class="toast-body text-white bg-success" id="toast_body">
                    Thêm voucher thành công
                </div>
            }
        }
        else
        {
            <div class="toast-body text-white bg-success" id="toast_body">

            </div>
        }
    </div>
</div>
@section scripts {
    <script src="~/public/js/Voucher.js"></script>
    <script src="/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="/Scripts/jquery.validate.js"></script>
    <script src="/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.26.1/axios.min.js" integrity="sha512-bPh3uwgU5qEMipS/VOmRqynnMXGGSRv+72H/N260MQeXZIK4PG48401Bsby9Nq5P5fz7hy5UGNmC/W1Z51h2GQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
}